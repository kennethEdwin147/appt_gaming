# 🎮 Instructions Dusk Browser Tests Auth - Gaming Platform

## 🎯 Objectif
Créer des tests Browser complets pour l'authentification de la plateforme gaming avec Laravel Dusk, couvrant tous les flows d'inscription, login et setup créateur.

## 📋 Tâches à réaliser

### 1. Installation & Configuration Dusk
- Installer Laravel Dusk via Composer
- Configurer l'environnement de test (.env.dusk.local)
- Setup base de données de test
- Configurer ChromeDriver

### 2. Structure des tests Browser Auth
Créer la structure complète dans `tests/Browser/Auth/`:

```
tests/Browser/Auth/
├── RegistrationFlowTest.php      # Flow inscription complète (customer/creator)
├── CreatorSetupWizardTest.php    # Wizard setup créateur gaming (2 étapes)
├── LoginFlowTest.php             # Login + redirections selon rôles
├── EmailVerificationFlowTest.php # Flow vérification email
└── RoleBasedAccessTest.php       # Contrôle d'accès selon rôles
```

### 3. Tests prioritaires à créer

#### RegistrationFlowTest.php
- **Flow inscription customer** : choix rôle → form → confirmation
- **Flow inscription creator** : choix rôle → form → redirection wizard
- **Validation forms** : champs requis, email unique, format
- **Gaming branding** : vérifier textes/UI gaming
- **Gestion erreurs** : email déjà utilisé, validation client-side

#### CreatorSetupWizardTest.php  
- **Setup créateur** : bio, platform_name, platform_url, type, timezone
- **Validation form** : champs requis, format URL, unicité platform_name
- **Completion** : redirection dashboard créateur
- **Gestion erreurs** : validation temps réel, messages d'erreur

#### LoginFlowTest.php
- **Login basique** : email/password → dashboard
- **Redirections rôles** : customer → booking, creator → dashboard
- **États setup** : creator non-setup → wizard
- **Remember me** : persistance session
- **Erreurs login** : mauvais credentials, compte suspendu

#### EmailVerificationFlowTest.php
- **Flow complet** : inscription → email → clic lien → vérification
- **Resend email** : bouton renvoyer, limitation
- **Lien expiré** : gestion expiration, nouveau lien
- **Déjà vérifié** : redirection appropriée

#### RoleBasedAccessTest.php
- **Accès customer** : peut voir booking, pas dashboard créateur
- **Accès creator** : peut voir dashboard, pas admin
- **Accès admin** : peut tout voir
- **Redirections** : accès non autorisé → login ou erreur 403

### 4. Spécificités Créateur à tester

#### Setup créateur
- **Champs requis** : bio, platform_name, platform_url, type, timezone
- **Validation platform_name** : unicité par créateur (selon contrainte DB)
- **Type libre** : string libre (coach, streamer, expert, etc.)
- **Platform_url** : format URL valide
- **Timezone** : sélection fuseau horaire

### 5. Bonnes pratiques à respecter

#### Sélecteurs robustes
- Utiliser `data-testid` pour les éléments critiques
- Éviter les sélecteurs CSS fragiles
- Préférer les textes visibles aux IDs

#### Données de test
- Factories pour créer des users/creators cohérents
- Emails de test valides
- Cleanup entre tests

#### Performance
- Grouper les tests par page
- Réutiliser les sessions quand possible
- Optimiser les attentes (waitFor)

#### Debugging
- Screenshots automatiques sur échec
- Logs détaillés des erreurs
- Console browser pour debug JS

## 🔧 Configuration requise

### Environnement test
```
APP_URL=http://localhost:8000
DB_DATABASE=gaming_platform_test
MAIL_MAILER=log
MAIL_LOG_CHANNEL=stack
```

### Factories nécessaires
- UserFactory (avec rôles)
- CreatorFactory 
- CustomerFactory
- EmailVerificationFactory

### Routes à tester
- `/register` (avec choix rôles)
- `/login`
- `/email/verify`
- `/creator/setup` (form unique simplifié)
- `/dashboard` (selon rôles)

## 🎮 Résultat attendu
Tests Browser complets qui valident l'expérience utilisateur gaming de bout en bout, avec une couverture complète des flows d'authentification et de setup créateur.

## 📊 Métriques de succès
- ✅ Tous les flows d'inscription fonctionnent
- ✅ Wizard créateur gaming opérationnel
- ✅ Redirections selon rôles correctes
- ✅ Validation forms temps réel
- ✅ UX gaming cohérente
- ✅ Zero regression sur auth existante